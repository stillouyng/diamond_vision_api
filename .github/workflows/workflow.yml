name: Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set Up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: pip install poetry

      - name: Configure Poetry
        run: poetry config virtualenvs.create false

      - name: Install Dependencies
        run: poetry install --no-root

      - name: Cache Poetry Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Create .env file
        run: |
          cat << EOF >> src/.env
          
          # API
          SENTIMENT_ANALYSIS_BASE_URL=${{ vars.SENTIMENT_ANALYSIS_BASE_URL }}
          SENTIMENT_ANALYSIS_API_KEY=${{ secrets.SENTIMENT_ANALYSIS_API_KEY }}
          
          IP_API_BASE_URL=${{ vars.IP_API_BASE_URL }}
          
          # HuggingFace
          OPEN_ROUTER_BASE_URL=${{ vars.OPEN_ROUTER_BASE_URL }}
          OPEN_ROUTER_API_KEY=${{ secrets.OPEN_ROUTER_API_KEY }}
          
          # logging
          LOG_LEVEL=INFO
          LOG_FILE=logs/app.log
          
          # database
          DB_URL=${{ vars.DB_URL }}
          DB_URL_SYNC=${{ vars.DB_URL_SYNC }}
          PAGINATION_LIMIT=50

      - name: Run Flake8
        run: poetry run flake8 .

      - name: Run Pytest
        run: poetry run pytest -v
